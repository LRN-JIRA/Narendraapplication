# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - run: mvn -B test --file pom.xml  
    - run: mkdir staging && cp target/*.war staging
    - run: pwd
    - run: ls -al    
    - uses: actions/upload-artifact@v1
      with:
        name: Package
        path: staging
    - name: Run sonarqube
      env:
       # to get access to secrets.SONAR_TOKEN, provide GITHUB_TOKEN
       GITHUB_TOKEN: 0b874a71100b66c8e57cafd213a53a75702a10a5
      run: sonar-scanner
         -Dsonar.login=8a761c323506986cdb9df91be0e72543319004c0
         -Dsonar.organization=narendrasingamaneni91
         -Dsonar.host.url=https://sonarcloud.io
         -Dsonar.projectKey=narendrasingamaneni91_Narendraapplication
         -Dsonar.exclusions=**/*.java,**/*.jar
    - uses: HurricanKai/Publish-Docker-Github-Action@master
      with:
       name: singama91/gitactions_cangk
       username: singama91
       password: Narendra#457
       dockerfile: Dockerfile
    - name: tomcat deploy
      run: curl -v -u tomcat:tomcat -T /home/runner/work/Narendraapplication/Narendraapplication/target/cangkitsolutions.war 'ec2-13-127-73-83.ap-south-1.compute.amazonaws.com:8080///manager/text/deploy?path=/cangkitsolutions.war'   
